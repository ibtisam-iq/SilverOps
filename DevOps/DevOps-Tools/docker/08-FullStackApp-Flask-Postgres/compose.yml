services:
  db:
    image: postgres:alpine
    restart: always
    env_file:
      - .env
    #ports:
      #- "5432:5432"  # Remove in production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
    # Always use $$ inside CMD-SHELL in compose.yml to pass env variables correctly to the container shell. 
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -h db -d $$POSTGRES_DB"]
      interval: 10s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile.multi-venv
    image: multi-build-with-venv
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    #environment:  
      #- FLASK_APP=app.py
      #- FLASK_RUN_HOST=0.0.0.0
      #- POSTGRES_USER=$POSTGRES_USER
      #- POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      #- POSTGRES_DB=$POSTGRES_DB
      #- SQLALCHEMY_DATABASE_URI=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@db/$POSTGRES_DB
    ports:
      - "5000:5000"
    volumes:
      - .:/app

volumes:
  postgres_data:
