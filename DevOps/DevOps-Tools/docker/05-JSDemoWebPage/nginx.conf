server {
    # Listen for incoming HTTP requests on port 80
    listen 80;

    # The server name (hostname) that this block responds to.
    # "localhost" means it's accessible via http://localhost in the browser.
    server_name localhost;

    # ---- Commented-out Section (Static File Serving) ----
    # The following block was originally intended to serve static files
    # for a React, Vue, or Angular frontend. It was commented out because
    # this configuration is now set up as a reverse proxy for a Node.js app.
    
    # location / {
    #    root /usr/share/nginx/html;  # Specifies the directory where static files are stored
    #    index index.html;            # The default file to serve
    #    try_files $uri /index.html;  # If requested file doesn't exist, serve index.html
    # }

    # ---- Reverse Proxy to Node.js App ----
    location / {
        # Redirect all requests to the Node.js application running inside a Docker container
        # The service name "app" corresponds to the Node.js service in docker-compose
        proxy_pass http://app:8081;

        # Use HTTP 1.1, required for WebSockets and keep-alive connections
        proxy_http_version 1.1;

        # Enable WebSocket support by upgrading the connection
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Preserve the original Host header from the client request
        proxy_set_header Host $host;

        # Bypass cache for WebSocket connections and ensure real-time updates
        proxy_cache_bypass $http_upgrade;
    }

    # ---- Error Page Handling ----
    # If an error occurs (500, 502, 503, 504), serve a custom error page
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        # Serve the error page from the default Nginx HTML directory
        root /usr/share/nginx/html;
    }
}
